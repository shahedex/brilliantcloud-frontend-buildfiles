{"version":3,"sources":["Navbar/Navbar.js","Homepage/Homepage.js","Authenticate/AuthJwt.js","NavDrawer/NavDrawer.js","DashboardView/DashboardBody.js","DashboardView/Dashboard.js","LoginView/Login.js","LoginView/Signup.js","Instances/LaunchInstance/LaunchInstance.js","Instances/InstanceDetails.js","Instances/InstanceBody.js","Authenticate/CheckRole.js","Instances/Instances.js","IdentityView/AddUser/AddUser.js","IdentityView/Users.js","IdentityView/AddRole/AddRole.js","IdentityView/Roles.js","App.js","serviceWorker.js","index.js"],"names":["Navbarss","props","state","dashboardView","showButtons","handleDrawer","bind","signOut","this","setState","config","headers","Authorization","localStorage","getItem","axios","post","then","res","removeItem","console","log","window","location","reload","catch","err","e","showDrawer","target","Group","align","Alignment","LEFT","Heading","to","minimal","icon","text","Divider","RIGHT","intent","onClick","Component","Homepage","jwtAuth","dateobj","Date","time","Math","floor","getTime","parseInt","jwt_decode","exp","NavDrawer","isShow","handleShowDrawer","handleCloseDrawer","handleHideDrawer","title","isOpen","onClose","position","Position","size","usePortal","className","Drawer","DRAWER_BODY","large","href","DashboardBody","overview_data","isFetching","getOverview","authenticateToken","resp","data","scopedToken","projectID","overview","core_max_val","cores","limit","core_in_use","in_use","ram_max_val","ram","ram_in_use","instances_max_val","instances","instances_in_use","keypairs_max_val","key_pairs","keypairs_in_use","floatingip_max_val","floating_ips","floatingip_in_use","securitygroup_max_val","security_groups","securitygroup_in_use","get","style","paddingLeft","paddingTop","paddingBottom","paddingRight","boxSizing","xs","elevation","Elevation","TWO","value","minValue","maxValue","Dashboard","hideDrawer","sessionDelete","showDrawerEvent","jwtValidity","Login","showPassword","email","password","showError","loginSpinner","redirect","handleLockClick","formHandler","formSubmit","toastGone","preventDefault","inputName","name","inputValue","loadingSpinner","postData","setItem","auth_token","lockButton","content","Intent","WARNING","padding","TOP","canEscapeKeyClear","message","timeout","onDismiss","fluid","center","THREE","method","onSubmit","id","onChange","leftIcon","placeholder","rightElement","type","loading","Signup","firstname","lastname","confirmpassword","phone","username","Label","styled","label","Form","form","Input","input","SelectDiv","div","CenterDiv","Option","option","Button","button","LaunchInstance","volumeTypeItem","imageNames","flavorNames","networkNames","volumeID","createVolume","checkVolumeStatus","createVM","showLaunchButton","project_data","all","spread","vol","img","flavor","net","values","volumesize","volumename","imageRef","imagename","volume_type","volumetype","forceUpdate","forVMCreation","flavorRef","flavorname","volumeUUID","networksUUID","networkname","volStatus","status","setTimeout","SIZE_SMALL","closeInstanceDrawer","drawerOpen","Classes","DIALOG_BODY","initialValues","render","handleChange","handleBlur","handleSubmit","onBlur","display","map","item","key","InstanceDetails","match","params","instanceid","openLaunchDrawer","vm_info","flavor_id","networks_list","launchInstanceDrawer","getVMInfo","deleteUser","serverID","networks","volume_id","Object","entries","addresses","push","ip","addr","user_email","nets","divStyle","overflowY","height","InstanceBody","vm_list","showToast","toastData","showDeleteAlert","vm_delete_id","perm_data","getVMList","openConsole","stopVM","startVM","rebootVM","deleteVM","handleDeleteCancel","handleDeleteConfirm","handleDeleteOpen","permission_list","jwt_token","role_name","roles","checkRole","includes","vm_id","msg","console_link","url","open","focus","disabled","RIGHT_TOP","cancelButtonText","confirmButtonText","DANGER","onCancel","onConfirm","vm","marginBlock","interactive","ONE","justifyContent","stopPropagation","rightIcon","path","Instances","AddUser","changeSelect","rolename","roles_list","getRoles","setUser","permissionlist","role","split","parent_id","sub","options","classNamePrefix","closeMenuOnSelect","Users","users_list","getUsers","user","AddRole","getPermissionList","perms","perm","permissionnames","addRole","perm_list","permissions_list","rolepermissions","setFieldValue","setFieldTouched","isMulti","Roles","deleteRole","App","Fragment","exact","component","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe27a2a8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Alignment, Button, Navbar } from \"@blueprintjs/core\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport class Navbarss extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dashboardView: this.props.dashboardView,\n      showButtons: false\n    };\n    this.handleDrawer = this.handleDrawer.bind(this);\n    this.signOut = this.signOut.bind(this);\n  }\n  componentDidMount() {\n    if (this.state.dashboardView) {\n      this.setState({ showButtons: false });\n    } else {\n      this.setState({ showButtons: true });\n    }\n  }\n\n  signOut() {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    axios\n      .post(\"/auth/logout\", \"\", config)\n      .then(res => {\n        localStorage.removeItem(\"auth_token\");\n        console.log(\"logged out\");\n        window.location.reload();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  handleDrawer(e) {\n    this.props.showDrawer(e.target);\n  }\n  render() {\n    return (\n      <div>\n        {this.state.showButtons ? (\n          <Navbar>\n            <Navbar.Group align={Alignment.LEFT}>\n              <Navbar.Heading>\n                <Link to=\"/\">\n                  <Button\n                    minimal\n                    icon=\"cloud\"\n                    text=\"Brilliant Cloud Platform\"\n                  />\n                </Link>\n              </Navbar.Heading>\n              <Navbar.Divider />\n            </Navbar.Group>\n            <Navbar.Group align={Alignment.RIGHT}>\n              <Link to=\"/signin\">\n                <Button intent=\"primary\" icon=\"log-in\" text=\"Sign In\" />\n              </Link>\n              <Navbar.Divider />\n              <Link to=\"/signup\">\n                <Button intent=\"primary\" icon=\"new-person\" text=\"Sign Up\" />\n              </Link>\n            </Navbar.Group>\n          </Navbar>\n        ) : (\n          <Navbar>\n            <Navbar.Group align={Alignment.LEFT}>\n              <Button onClick={this.handleDrawer} minimal icon=\"menu\" />\n              <Navbar.Divider />\n              <Navbar.Heading>Brilliant Cloud Dashboard</Navbar.Heading>\n              <Navbar.Divider />\n            </Navbar.Group>\n            <Navbar.Group align={Alignment.RIGHT}>\n              <Button\n                onClick={this.signOut}\n                minimal\n                icon=\"log-out\"\n                text=\"Sign Out\"\n              />\n            </Navbar.Group>\n          </Navbar>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Navbarss;\n","import React, { Component } from \"react\";\nimport { Navbarss } from \"../Navbar/Navbar\";\n\nexport class Homepage extends Component {\n  render() {\n    return (\n      <div>\n        <Navbarss dashboardView={false} showDrawer={false} />\n      </div>\n    );\n  }\n}\n\nexport default Homepage;\n","import jwt_decode from \"jwt-decode\";\n\nexport function jwtAuth() {\n  try {\n    const dateobj = new Date();\n    const time = Math.floor(dateobj.getTime() / 1000);\n    const jwtdata = parseInt(\n      jwt_decode(localStorage.getItem(\"auth_token\")).exp\n    );\n    if (jwtdata < time) {\n      localStorage.removeItem(\"auth_token\");\n      return false;\n    }\n    return true;\n  } catch (err) {\n    console.log(\"Token not found\");\n    localStorage.removeItem(\"auth_token\");\n    return false;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Drawer, Menu, MenuItem, Position } from \"@blueprintjs/core\";\n\nexport class NavDrawer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isShow: true };\n    this.handleShowDrawer = this.handleShowDrawer.bind(this);\n    this.handleCloseDrawer = this.handleCloseDrawer.bind(this);\n  }\n  handleShowDrawer() {\n    this.setState({ isShow: true });\n  }\n  handleCloseDrawer() {\n    this.props.handleHideDrawer();\n    this.setState({ isShow: false });\n  }\n  render() {\n    return (\n      <div>\n        <Drawer\n          title=\"Menus\"\n          isOpen={this.state.isShow}\n          onClose={this.handleCloseDrawer}\n          position={Position.LEFT}\n          size=\"15%\"\n          usePortal={true}\n        >\n          <div className={Drawer.DRAWER_BODY}>\n            <Menu large>\n              <MenuItem icon=\"desktop\" text=\"Compute\">\n                <MenuItem text=\"Overview\" href=\"/dashboard/overview\" />\n                <Menu.Divider />\n                <MenuItem text=\"Instances\" href=\"/dashboard/instances\" />\n                <Menu.Divider />\n                <MenuItem text=\"Images\" />\n                <Menu.Divider />\n                <MenuItem text=\"Key Pairs\" />\n              </MenuItem>\n              <Menu.Divider />\n              <MenuItem icon=\"database\" text=\"Volumes\">\n                <MenuItem text=\"Volumes\" />\n                <Menu.Divider />\n                <MenuItem text=\"Snapshots\" />\n              </MenuItem>\n              <Menu.Divider />\n              <MenuItem icon=\"ip-address\" text=\"Network\">\n                <MenuItem text=\"Networks\" />\n                <Menu.Divider />\n                <MenuItem text=\"Floating IPs\" />\n              </MenuItem>\n              <Menu.Divider />\n              <MenuItem icon=\"shield\" text=\"Identity\">\n                <MenuItem text=\"Users\" href=\"/dashboard/identity/users\" />\n                <Menu.Divider />\n                <MenuItem text=\"Roles\" href=\"/dashboard/identity/roles\" />\n              </MenuItem>\n            </Menu>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default NavDrawer;\n","import React, { Component } from \"react\";\nimport { Spinner, Card, Elevation } from \"@blueprintjs/core\";\nimport { Row, Col } from \"react-flexbox-grid\";\nimport axios from \"axios\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nexport class DashboardBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { overview_data: {}, isFetching: false };\n    this.getOverview = this.getOverview.bind(this);\n    this.authenticateToken = this.authenticateToken.bind(this);\n  }\n  componentDidMount() {\n    this.authenticateToken().then(res => {\n      console.log(\"got authenticated\");\n      this.getOverview().then(resp => {\n        this.setState({ isFetching: false });\n        console.log(\"got the overview\");\n      });\n    });\n  }\n\n  getOverview() {\n    const data = {\n      scopedToken: this.state.scopedToken,\n      projectID: this.state.projectID\n    };\n    return axios\n      .post(\"/api/v1/vm-service/get-overview\", data)\n      .then(res => {\n        const overview = res.data;\n        this.setState({ overview_data: overview });\n        this.setState({ core_max_val: overview.cores.limit });\n        this.setState({ core_in_use: overview.cores.in_use });\n        this.setState({ ram_max_val: overview.ram.limit });\n        this.setState({ ram_in_use: overview.ram.in_use });\n        this.setState({ instances_max_val: overview.instances.limit });\n        this.setState({ instances_in_use: overview.instances.in_use });\n        this.setState({ keypairs_max_val: overview.key_pairs.limit });\n        this.setState({ keypairs_in_use: overview.key_pairs.in_use });\n        this.setState({ floatingip_max_val: overview.floating_ips.limit });\n        this.setState({ floatingip_in_use: overview.floating_ips.in_use });\n        this.setState({\n          securitygroup_max_val: overview.security_groups.limit\n        });\n        this.setState({\n          securitygroup_in_use: overview.security_groups.in_use\n        });\n        console.log(overview);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  authenticateToken() {\n    this.setState({ isFetching: true });\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    return axios\n      .get(\"/auth/authenticate\", config)\n      .then(res => {\n        this.setState({\n          projectID: res.data.data.projectID,\n          scopedToken: res.data.data.scopedToken\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          style={{\n            paddingLeft: \"10px\",\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\",\n            paddingRight: \"10px\",\n            boxSizing: \"content-box\"\n          }}\n        >\n          <Row>\n            <Col xs>\n              <Card elevation={Elevation.TWO}>\n                <p>Instances</p>\n                {this.state.isFetching ? (\n                  <Spinner />\n                ) : (\n                  <>\n                    <Row>\n                      <CircularProgressbar\n                        value={\n                          (this.state.instances_in_use /\n                            this.state.instances_max_val) *\n                          this.state.instances_max_val\n                        }\n                        minValue={0}\n                        maxValue={this.state.instances_max_val}\n                        text={`${(this.state.instances_in_use /\n                          this.state.instances_max_val) *\n                          100}%`}\n                      />\n                      <Col xs>\n                        <p>\n                          <b>Total Allocated: </b>\n                          {this.state.instances_max_val}\n                        </p>\n                        <p>\n                          <b>In-use: </b>\n                          {this.state.instances_in_use}\n                        </p>\n                      </Col>\n                    </Row>\n                  </>\n                )}\n              </Card>\n            </Col>\n            <Col xs>\n              <Card elevation={Elevation.TWO}>\n                <p>CPU Cores</p>\n                {this.state.isFetching ? (\n                  <Spinner />\n                ) : (\n                  <>\n                    <Row>\n                      <CircularProgressbar\n                        value={\n                          (this.state.core_in_use / this.state.core_max_val) *\n                          this.state.core_max_val\n                        }\n                        minValue={0}\n                        maxValue={this.state.core_max_val}\n                        text={`${(this.state.core_in_use /\n                          this.state.core_max_val) *\n                          100}%`}\n                      />\n                      <Col xs>\n                        <p>\n                          <b>Total Allocated: </b>\n                          {this.state.core_max_val}\n                        </p>\n                        <p>\n                          <b>In-use: </b>\n                          {this.state.core_in_use}\n                        </p>\n                      </Col>\n                    </Row>\n                  </>\n                )}\n              </Card>\n            </Col>\n            <Col xs>\n              <Card elevation={Elevation.TWO}>\n                <p>Ram Usage</p>\n                {this.state.isFetching ? (\n                  <Spinner />\n                ) : (\n                  <>\n                    <Row>\n                      <CircularProgressbar\n                        value={\n                          (this.state.ram_in_use / this.state.ram_max_val) *\n                          this.state.ram_max_val\n                        }\n                        minValue={0}\n                        maxValue={this.state.ram_max_val}\n                        text={`${(this.state.ram_in_use /\n                          this.state.ram_max_val) *\n                          100}%`}\n                      />\n                      <Col xs>\n                        <p>\n                          <b>Total Allocated: </b>\n                          {this.state.ram_max_val}\n                        </p>\n                        <p>\n                          <b>In-use: </b>\n                          {this.state.ram_in_use}\n                        </p>\n                      </Col>\n                    </Row>\n                  </>\n                )}\n              </Card>\n            </Col>\n          </Row>\n        </div>\n        <div\n          style={{\n            paddingLeft: \"10px\",\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\",\n            paddingRight: \"10px\",\n            boxSizing: \"content-box\"\n          }}\n        ></div>\n        <div\n          style={{\n            paddingLeft: \"10px\",\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\",\n            paddingRight: \"10px\",\n            boxSizing: \"content-box\"\n          }}\n        >\n          <Row>\n            <Col xs>\n              <Card elevation={Elevation.TWO}>\n                <p>Floating IPs</p>\n                {this.state.isFetching ? (\n                  <Spinner />\n                ) : (\n                  <>\n                    <Row>\n                      <CircularProgressbar\n                        value={\n                          (this.state.floatingip_in_use /\n                            this.state.floatingip_max_val) *\n                          this.state.floatingip_max_val\n                        }\n                        minValue={0}\n                        maxValue={this.state.floatingip_max_val}\n                        text={`${(this.state.floatingip_in_use /\n                          this.state.floatingip_max_val) *\n                          100}%`}\n                      />\n                      <Col xs>\n                        <p>\n                          <b>Total Allocated: </b>\n                          {this.state.floatingip_max_val}\n                        </p>\n                        <p>\n                          <b>In-use: </b>\n                          {this.state.floatingip_in_use}\n                        </p>\n                      </Col>\n                    </Row>\n                  </>\n                )}\n              </Card>\n            </Col>\n            <Col xs>\n              <Card elevation={Elevation.TWO}>\n                <p>Key Pairs</p>\n                {this.state.isFetching ? (\n                  <Spinner />\n                ) : (\n                  <>\n                    <Row>\n                      <CircularProgressbar\n                        value={\n                          (this.state.keypairs_in_use /\n                            this.state.keypairs_max_val) *\n                          this.state.keypairs_max_val\n                        }\n                        minValue={0}\n                        maxValue={this.state.keypairs_max_val}\n                        text={`${(this.state.keypairs_in_use /\n                          this.state.keypairs_max_val) *\n                          100}%`}\n                      />\n                      <Col xs>\n                        <p>\n                          <b>Total Allocated: </b>\n                          {this.state.keypairs_max_val}\n                        </p>\n                        <p>\n                          <b>In-use: </b>\n                          {this.state.keypairs_in_use}\n                        </p>\n                      </Col>\n                    </Row>\n                  </>\n                )}\n              </Card>\n            </Col>\n            <Col xs>\n              <Card elevation={Elevation.TWO}>\n                <p>Security Groups</p>\n                {this.state.isFetching ? (\n                  <Spinner />\n                ) : (\n                  <>\n                    <Row>\n                      <CircularProgressbar\n                        value={\n                          (this.state.securitygroup_in_use /\n                            this.state.securitygroup_max_val) *\n                          this.state.securitygroup_max_val\n                        }\n                        minValue={0}\n                        maxValue={this.state.securitygroup_max_val}\n                        text={`${(this.state.securitygroup_in_use /\n                          this.state.securitygroup_max_val) *\n                          100}%`}\n                      />\n                      <Col xs>\n                        <p>\n                          <b>Total Allocated: </b>\n                          {this.state.securitygroup_max_val}\n                        </p>\n                        <p>\n                          <b>In-use: </b>\n                          {this.state.securitygroup_in_use}\n                        </p>\n                      </Col>\n                    </Row>\n                  </>\n                )}\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DashboardBody;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { jwtAuth } from \"../Authenticate/AuthJwt\";\nimport { Navbarss } from \"../Navbar/Navbar\";\nimport { NavDrawer } from \"../NavDrawer/NavDrawer\";\nimport { DashboardBody } from \"./DashboardBody\";\n\nexport class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.showDrawer = this.showDrawer.bind(this);\n    this.hideDrawer = this.hideDrawer.bind(this);\n    this.sessionDelete = this.sessionDelete.bind(this);\n    this.state = { showDrawerEvent: false, jwtValidity: true };\n  }\n\n  sessionDelete() {\n    this.setState({ jwtValidity: false });\n  }\n  showDrawer(e) {\n    this.setState({ showDrawerEvent: true });\n  }\n  hideDrawer(e) {\n    this.setState({ showDrawerEvent: false });\n  }\n  render() {\n    const sessionValidity = jwtAuth();\n    if (!sessionValidity) {\n      this.sessionDelete();\n    }\n    return (\n      <div>\n        {this.state.jwtValidity ? (\n          <>\n            <Navbarss dashboardView={true} showDrawer={this.showDrawer} />\n            {this.state.showDrawerEvent ? (\n              <NavDrawer\n                // isShow={this.state.showDrawerEvent}\n                //handleShowDrawer={this.showDrawer}\n                handleHideDrawer={this.hideDrawer}\n              />\n            ) : (\n              \"\"\n            )}\n            <DashboardBody />\n          </>\n        ) : (\n          <Redirect to={\"/signin\"} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  FormGroup,\n  InputGroup,\n  Tooltip,\n  Intent,\n  Card,\n  Elevation,\n  Toast,\n  Toaster,\n  Position\n} from \"@blueprintjs/core\";\nimport { Grid, Row, Col } from \"react-flexbox-grid\";\nimport axios from \"axios\";\nimport { Navbarss } from \"../Navbar/Navbar\";\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false,\n      email: \"\",\n      password: \"\",\n      showError: false,\n      loginSpinner: false,\n      redirect: false\n    };\n    this.handleLockClick = this.handleLockClick.bind(this);\n    this.formHandler = this.formHandler.bind(this);\n    this.formSubmit = this.formSubmit.bind(this);\n    this.toastGone = this.toastGone.bind(this);\n  }\n\n  toastGone() {\n    console.log(\"tast is gone\");\n    this.setState({ showError: false });\n  }\n  formHandler(e) {\n    e.preventDefault();\n    const inputName = e.target.name;\n    const inputValue = e.target.value;\n\n    this.setState({\n      [inputName]: inputValue\n    });\n  }\n\n  formSubmit(e) {\n    e.preventDefault();\n    this.setState({ loadingSpinner: true });\n    const postData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    axios\n      .post(\"/auth/login\", postData)\n      .then(resp => {\n        localStorage.setItem(\"auth_token\", resp.data.auth_token);\n        console.log(resp.data.auth_token);\n        this.setState({ loadingSpinner: false });\n        this.setState({ redirect: true });\n      })\n      .catch(e => {\n        console.log(e);\n        this.setState({ loadingSpinner: false });\n        this.setState({ showError: true });\n      });\n  }\n\n  handleLockClick() {\n    this.setState({ showPassword: !this.state.showPassword });\n  }\n\n  render() {\n    const { showPassword } = this.state;\n\n    const Header = {\n      padding: \"10em\"\n    };\n\n    const lockButton = (\n      <Tooltip content={`${showPassword ? \"Hide\" : \"Show\"} Password`}>\n        <Button\n          icon={showPassword ? \"unlock\" : \"lock\"}\n          intent={Intent.WARNING}\n          minimal={true}\n          onClick={this.handleLockClick}\n        />\n      </Tooltip>\n    );\n    return (\n      <div>\n        <Navbarss dashboardView={false} showDrawer={false} />\n        <div style={Header}>\n          {this.state.showError ? (\n            <Toaster position={Position.TOP} canEscapeKeyClear={true}>\n              <Toast\n                intent=\"danger\"\n                message=\"Email/Password is wrong! Please try again.\"\n                timeout=\"3000\"\n                onDismiss={this.toastGone}\n              />\n            </Toaster>\n          ) : (\n            \"\"\n          )}\n          {this.state.redirect ? (\n            <Redirect to={\"/dashboard/overview\"} />\n          ) : (\n            <Grid fluid>\n              <Row>\n                <Col xs={12}>\n                  <Row center=\"xs\">\n                    <Col xs={4}>\n                      <Card elevation={Elevation.THREE}>\n                        <h2 align=\"center\">Sign In</h2>\n                        <form method=\"POST\" onSubmit={this.formSubmit}>\n                          <FormGroup>\n                            <InputGroup\n                              id=\"email\"\n                              name=\"email\"\n                              large\n                              onChange={this.formHandler}\n                              leftIcon=\"envelope\"\n                              placeholder=\"Email\"\n                            />\n                            <br />\n                            <InputGroup\n                              id=\"password\"\n                              name=\"password\"\n                              large\n                              rightElement={lockButton}\n                              onChange={this.formHandler}\n                              type={showPassword ? \"text\" : \"password\"}\n                              leftIcon=\"key\"\n                              placeholder=\"Password\"\n                            />\n                          </FormGroup>\n                          <Button\n                            intent=\"success\"\n                            loading={this.state.loadingSpinner}\n                            icon=\"log-in\"\n                            text=\"Login\"\n                            type=\"submit\"\n                          />\n                        </form>\n                      </Card>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Grid>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  FormGroup,\n  InputGroup,\n  Tooltip,\n  Intent,\n  Card,\n  Elevation\n} from \"@blueprintjs/core\";\nimport { Grid, Row, Col } from \"react-flexbox-grid\";\nimport axios from \"axios\";\nimport { Navbarss } from \"../Navbar/Navbar\";\n\nexport class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false,\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmpassword: \"\",\n      phone: \"\"\n    };\n    this.handleLockClick = this.handleLockClick.bind(this);\n    this.formHandler = this.formHandler.bind(this);\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n\n  formHandler(e) {\n    e.preventDefault();\n    const inputName = e.target.name;\n    const inputValue = e.target.value;\n\n    this.setState({\n      [inputName]: inputValue\n    });\n  }\n\n  formSubmit(e) {\n    e.preventDefault();\n    console.log(this.state);\n    const postData = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      email: this.state.email,\n      password: this.state.password,\n      username: this.state.phone\n    };\n    axios\n      .post(\"/auth/register\", postData)\n      .then(resp => {\n        console.log(resp.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  handleLockClick() {\n    this.setState({ showPassword: !this.state.showPassword });\n  }\n\n  render() {\n    const { showPassword } = this.state;\n\n    const Header = {\n      padding: \"5em\"\n    };\n\n    const lockButton = (\n      <Tooltip content={`${showPassword ? \"Hide\" : \"Show\"} Password`}>\n        <Button\n          icon={showPassword ? \"unlock\" : \"lock\"}\n          intent={Intent.WARNING}\n          minimal={true}\n          onClick={this.handleLockClick}\n        />\n      </Tooltip>\n    );\n    return (\n      <div>\n        <Navbarss dashboardView={false} showDrawer={false} />\n\n        <div style={Header}>\n          <Grid fluid>\n            <Row>\n              <Col xs={12}>\n                <Row center=\"xs\">\n                  <Col xs={4}>\n                    <Card elevation={Elevation.THREE}>\n                      <h2 align=\"center\">Sign Up</h2>\n                      <form method=\"POST\" onSubmit={this.formSubmit}>\n                        <FormGroup>\n                          <InputGroup\n                            id=\"firstname\"\n                            name=\"firstname\"\n                            large\n                            leftIcon=\"user\"\n                            placeholder=\"First Name\"\n                            onChange={this.formHandler}\n                          />\n                          <br />\n                          <InputGroup\n                            id=\"lastname\"\n                            name=\"lastname\"\n                            large\n                            leftIcon=\"user\"\n                            placeholder=\"Last Name\"\n                            onChange={this.formHandler}\n                          />\n                          <br />\n                          <InputGroup\n                            id=\"email\"\n                            name=\"email\"\n                            large\n                            leftIcon=\"envelope\"\n                            placeholder=\"Email\"\n                            onChange={this.formHandler}\n                          />\n                          <br />\n                          <InputGroup\n                            id=\"password\"\n                            name=\"password\"\n                            large\n                            rightElement={lockButton}\n                            type={showPassword ? \"text\" : \"password\"}\n                            leftIcon=\"key\"\n                            placeholder=\"Password\"\n                            onChange={this.formHandler}\n                          />\n                          <br />\n                          <InputGroup\n                            id=\"confirmpassoword\"\n                            name=\"confirmpassword\"\n                            large\n                            rightElement={lockButton}\n                            type=\"password\"\n                            leftIcon=\"key\"\n                            placeholder=\"Confirm Password\"\n                            onChange={this.formHandler}\n                          />\n                          <br />\n                          <InputGroup\n                            id=\"phone\"\n                            name=\"phone\"\n                            large\n                            leftIcon=\"mobile-phone\"\n                            placeholder=\"Phone Number\"\n                            onChange={this.formHandler}\n                          />\n                        </FormGroup>\n                        <Button\n                          intent=\"success\"\n                          icon=\"new-person\"\n                          text=\"Sign Up\"\n                          type=\"submit\"\n                        />\n                      </form>\n                    </Card>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport { Drawer, Classes, Position, Spinner } from \"@blueprintjs/core\";\nimport { Formik } from \"formik\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: #777;\n  font-family: \"Raleway\", sans-serif;\n  font-size: 1em;\n  margin: 0.5em 0;\n  position: relative;\n`;\n\nconst Form = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  width: 300px;\n  height: 35px;\n  border: 1px solid #ccc;\n  background-color: #fff;\n`;\n\nconst SelectDiv = styled.div`\n  position: relative;\n  font-family: Arial;\n  background-color: DodgerBlue;\n`;\n\nconst CenterDiv = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  paddingtop: 50%;\n`;\nconst Option = styled.option`\n  position: absolute;\n  background-color: DodgerBlue;\n  top: 100%;\n  left: 0;\n  right: 0;\n  z-index: 99;\n`;\nconst Button = styled.button`\n  width: 300px;\n  height: 35px;\n  background-color: #5995ef;\n  color: #fff;\n  border-radius: 3px;\n`;\n\nexport class LaunchInstance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: false,\n      volumeTypeItem: [],\n      projectID: \"\",\n      scopedToken: \"\",\n      imageNames: [],\n      flavorNames: [],\n      networkNames: [],\n      volumeID: \"\"\n    };\n    this.authenticateToken = this.authenticateToken.bind(this);\n    this.createVolume = this.createVolume.bind(this);\n    this.checkVolumeStatus = this.checkVolumeStatus.bind(this);\n    this.formSubmit = this.formSubmit.bind(this);\n    this.createVM = this.createVM.bind(this);\n  }\n  authenticateToken() {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    return axios\n      .get(\"/auth/authenticate\", config)\n      .then(res => {\n        this.setState({\n          projectID: res.data.data.projectID,\n          scopedToken: res.data.data.scopedToken\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  componentDidMount() {\n    if (!this.props.showLaunchButton) {\n      this.setState({ isFetching: true });\n      this.authenticateToken().then(res => {\n        const urlVolumeType = \"/api/v1/vm-service/get-volume-type\";\n        const urlImageName = \"/api/v1/vm-service/get-image-info\";\n        const urlFlavorName = \"/api/v1/vm-service/get-flavors\";\n        const urlNetworkName = \"/api/v1/vm-service/get-networks\";\n\n        const project_data = {\n          scopedToken: this.state.scopedToken,\n          projectID: this.state.projectID\n        };\n        axios\n          .all([\n            axios.post(urlVolumeType, project_data),\n            axios.post(urlImageName, project_data),\n            axios.post(urlFlavorName, project_data),\n            axios.post(urlNetworkName, project_data)\n          ])\n          .then(\n            axios.spread((vol, img, flavor, net) => {\n              this.setState({ volumeTypeItem: vol.data });\n              this.setState({ imageNames: img.data });\n              this.setState({ flavorNames: flavor.data });\n              this.setState({ networkNames: net.data });\n              this.setState({ isFetching: false });\n            })\n          )\n          .catch(err => {\n            console.log(err);\n          });\n      });\n    } else {\n      console.log(\"not fetching launch instance data\");\n    }\n  }\n  createVolume(values) {\n    const postData = {\n      scopedToken: this.state.scopedToken,\n      projectID: this.state.projectID,\n      size: values.volumesize,\n      name: values.volumename,\n      imageRef: values.imagename,\n      volume_type: values.volumetype\n    };\n    const volumeCreateUrl = \"/api/v1/vm-service/create-volume\";\n    return axios\n      .post(volumeCreateUrl, postData)\n      .then(res => {\n        this.setState({ volumeID: res.data.id });\n        this.forceUpdate();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  formSubmit(values) {\n    this.setState({ forVMCreation: values });\n    this.setState({ isFetching: true });\n    this.createVolume(values).then(res => {\n      this.checkVolumeStatus(this.state.volumeID);\n    });\n  }\n\n  createVM(values) {\n    console.log(\"creating vm\");\n    const postData = {\n      scopedToken: this.state.scopedToken,\n      flavorRef: values.flavorname,\n      name: values.volumename,\n      volumeUUID: this.state.volumeID,\n      networksUUID: values.networkname\n    };\n    const vmCreateUrl = \"/api/v1/vm-service/create-vm\";\n    return axios\n      .post(vmCreateUrl, postData)\n      .then(res => {\n        console.log(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  checkVolumeStatus(volumeID) {\n    const postData = {\n      scopedToken: this.state.scopedToken,\n      projectID: this.state.projectID,\n      volumeID: volumeID\n    };\n    const volumeStatusUrl = \"/api/v1/vm-service/get-volume-status\";\n    axios\n      .post(volumeStatusUrl, postData)\n      .then(res => {\n        const volStatus = res.data.status;\n        if (volStatus !== \"available\") {\n          setTimeout(this.checkVolumeStatus(volumeID), 3000);\n        } else if (volStatus === \"available\") {\n          console.log(\"volume created\");\n          this.createVM(this.state.forVMCreation).then(res => {\n            console.log(\"createvm returned\");\n            this.setState({ isFetching: false });\n          });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Drawer\n          size={Drawer.SIZE_SMALL}\n          icon=\"cloud-upload\"\n          onClose={this.props.closeInstanceDrawer}\n          title=\"Launch Instance\"\n          isOpen={this.props.drawerOpen}\n          position={Position.RIGHT}\n        >\n          <div className={Classes.DRAWER_BODY}>\n            <div className={Classes.DIALOG_BODY}>\n              {this.state.isFetching ? (\n                <CenterDiv>\n                  <Spinner />\n                </CenterDiv>\n              ) : (\n                <Formik\n                  initialValues={{\n                    volumename: \"\",\n                    volumesize: \"\",\n                    volumetype: \"\",\n                    imagename: \"\",\n                    flavorname: \"\",\n                    networkname: \"\"\n                  }}\n                  onSubmit={values => {\n                    this.formSubmit(values);\n                  }}\n                  render={({\n                    values,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit\n                  }) => (\n                    <Form onSubmit={handleSubmit}>\n                      <Label>\n                        Volume Name\n                        <Input\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.volumename}\n                          type=\"text\"\n                          name=\"volumename\"\n                          placeholder=\"Enter Volume Name\"\n                        />\n                      </Label>\n                      <Label>\n                        Size\n                        <Input\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.volumesize}\n                          type=\"number\"\n                          name=\"volumesize\"\n                          placeholder=\"Enter Volume Size(GB)\"\n                        />\n                      </Label>\n                      <Label>\n                        Select Volume Type\n                        <SelectDiv>\n                          <select\n                            name=\"volumetype\"\n                            value={values.volumetype}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            style={{ display: \"block\" }}\n                          >\n                            <Option value=\"\" label=\"Volume Types\" />\n                            {this.state.volumeTypeItem.map(item => {\n                              return (\n                                <Option\n                                  key={item.id}\n                                  value={item.id}\n                                  label={item.name}\n                                />\n                              );\n                            })}\n                          </select>\n                        </SelectDiv>\n                      </Label>\n                      <Label>\n                        Select Image\n                        <SelectDiv>\n                          <select\n                            name=\"imagename\"\n                            value={values.imagename}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            style={{}}\n                          >\n                            <Option value=\"\" label=\"Select an Image\" />\n                            {this.state.imageNames.map(item => {\n                              return (\n                                <Option\n                                  key={item.id}\n                                  value={item.id}\n                                  label={item.name + \" (\" + item.size + \" MB)\"}\n                                />\n                              );\n                            })}\n                          </select>\n                        </SelectDiv>\n                      </Label>\n                      <Label>\n                        Select Flavor\n                        <SelectDiv>\n                          <select\n                            name=\"flavorname\"\n                            value={values.flavorname}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            style={{}}\n                          >\n                            <Option value=\"\" label=\"Select a flavor\" />\n                            {this.state.flavorNames.map(item => {\n                              return (\n                                <Option\n                                  key={item.id}\n                                  value={item.id}\n                                  label={item.name}\n                                />\n                              );\n                            })}\n                          </select>\n                        </SelectDiv>\n                      </Label>\n                      <Label>\n                        Select Network\n                        <SelectDiv>\n                          <select\n                            name=\"networkname\"\n                            value={values.networkname}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            style={{}}\n                          >\n                            <Option value=\"\" label=\"Select a network\" />\n                            {this.state.networkNames.map(item => {\n                              return (\n                                <Option\n                                  key={item.id}\n                                  value={item.id}\n                                  label={item.name}\n                                />\n                              );\n                            })}\n                          </select>\n                        </SelectDiv>\n                      </Label>\n                      <Button type=\"submit\">Launch Instance</Button>\n                    </Form>\n                  )}\n                />\n              )}\n            </div>\n          </div>\n          {/* <div className={Classes.DRAWER_FOOTER}>Next Step: Select Network</div> */}\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default LaunchInstance;\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { Button, Spinner, Divider, Card, Elevation } from \"@blueprintjs/core\";\nimport axios from \"axios\";\nimport { Navbarss } from \"../Navbar/Navbar\";\nimport { jwtAuth } from \"../Authenticate/AuthJwt\";\nimport { NavDrawer } from \"../NavDrawer/NavDrawer\";\n\nconst divStyle = {\n  overflowY: \"scroll\",\n  height: \"500px\",\n  position: \"relative\"\n};\n\nexport class InstanceDetails extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"instances page\");\n    console.log(this.props.match.params.instanceid);\n    this.showDrawer = this.showDrawer.bind(this);\n    this.hideDrawer = this.hideDrawer.bind(this);\n    this.sessionDelete = this.sessionDelete.bind(this);\n    this.state = {\n      showDrawerEvent: false,\n      jwtValidity: true,\n      openLaunchDrawer: false,\n      projectID: \"\",\n      scopedToken: \"\",\n      vm_info: [],\n      flavor_id: \"\",\n      networks_list: []\n    };\n    this.launchInstanceDrawer = this.launchInstanceDrawer.bind(this);\n    this.closeInstanceDrawer = this.closeInstanceDrawer.bind(this);\n    this.authenticateToken = this.authenticateToken.bind(this);\n    this.getVMInfo = this.getVMInfo.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ isFetching: true });\n    this.authenticateToken().then(res => {\n      this.getVMInfo().then(resp => {\n        console.log(\"got it\");\n        this.setState({ isFetching: false });\n      });\n    });\n  }\n\n  authenticateToken() {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    return axios\n      .get(\"/auth/authenticate\", config)\n      .then(res => {\n        this.setState({\n          projectID: res.data.data.projectID,\n          scopedToken: res.data.data.scopedToken\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  getVMInfo() {\n    const data = {\n      scopedToken: this.state.scopedToken,\n      serverID: this.props.match.params.instanceid\n    };\n    return axios\n      .post(\"/api/v1/vm-service/get-vm-info\", data)\n      .then(res => {\n        const networks = [];\n        const vm_info = res.data;\n        this.setState({ vm_info: vm_info });\n        this.setState({ flavor_id: vm_info.flavor.id });\n        this.setState({\n          volume_id: vm_info[\"os-extended-volumes:volumes_attached\"][0].id\n        });\n        console.log(vm_info);\n        for (let [key, value] of Object.entries(vm_info.addresses)) {\n          networks.push({ name: key, ip: vm_info.addresses[key][0].addr });\n          console.log(`${key}: ${vm_info.addresses[key][0].addr}`);\n        }\n        this.setState({ networks_list: networks });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  deleteUser(value, e) {\n    e.preventDefault();\n    console.log(value);\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    const data = {\n      projectID: this.state.projectID,\n      user_email: value\n    };\n    return axios\n      .post(\"/auth/deleteuser\", data, config)\n      .then(res => {\n        console.log(res);\n        window.location.reload();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  sessionDelete() {\n    this.setState({ jwtValidity: false });\n  }\n\n  showDrawer(e) {\n    this.setState({ showDrawerEvent: true });\n  }\n\n  hideDrawer(e) {\n    this.setState({ showDrawerEvent: false });\n  }\n\n  launchInstanceDrawer() {\n    this.setState({ openLaunchDrawer: true });\n  }\n\n  closeInstanceDrawer() {\n    this.setState({ openLaunchDrawer: false });\n    window.location.reload();\n  }\n  render() {\n    const sessionValidity = jwtAuth();\n    if (!sessionValidity) {\n      this.sessionDelete();\n    }\n    return (\n      <>\n        {this.state.jwtValidity ? (\n          <>\n            {this.state.showDrawerEvent ? (\n              <NavDrawer handleHideDrawer={this.hideDrawer} />\n            ) : (\n              \"\"\n            )}\n            <div>\n              <Navbarss dashboardView={true} showDrawer={this.showDrawer} />\n              <div>\n                <div\n                  style={{\n                    padding: \"1em\",\n                    paddingLeft: \"10%\",\n                    paddingRight: \"10%\"\n                  }}\n                  align=\"right\"\n                >\n                  <Button onClick={this.launchInstanceDrawer} intent=\"success\">\n                    Edit Instance\n                  </Button>\n\n                  <div\n                    style={{\n                      paddingTop: \"1em\"\n                    }}\n                    align=\"left\"\n                  >\n                    <Card elevation={Elevation.TWO}>\n                      {this.state.isFetching ? (\n                        <Spinner />\n                      ) : (\n                        <>\n                          <h2>Details: {this.state.vm_info[\"name\"]}</h2>\n                          <Divider />\n                          <br />\n                          <h3>Overview</h3>\n                          <Divider />\n                          <p>\n                            <strong>Name: </strong>\n                            {this.state.vm_info[\"name\"]}\n                          </p>\n\n                          <p>\n                            <strong>ID: </strong>\n                            {this.state.vm_info[\"id\"]}\n                          </p>\n                          <p>\n                            <strong>Status: </strong>\n                            {this.state.vm_info[\"status\"]}\n                          </p>\n\n                          <p>\n                            <strong>Availability Zone: </strong>\n                            {this.state.vm_info[\"OS-EXT-AZ:availability_zone\"]}\n                          </p>\n                          <p>\n                            <strong>Created: </strong>\n                            {this.state.vm_info[\"created\"]}\n                          </p>\n                          <br />\n                          <h3>Specs</h3>\n                          <Divider />\n                          <p>\n                            <strong>Flavor ID: </strong>\n                            {this.state.flavor_id}\n                          </p>\n                          <p>\n                            <strong>Volume ID: </strong>\n                            {this.state.volume_id}\n                          </p>\n                          <br />\n                          <h3>IP Addresses</h3>\n                          <Divider />\n                          <p>\n                            {this.state.networks_list.map(nets => {\n                              return (\n                                <p>\n                                  <strong>{nets.name}: </strong>\n                                  {nets.ip}\n                                </p>\n                              );\n                            })}\n                          </p>\n                        </>\n                      )}\n                    </Card>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          <Redirect to={\"/signin\"} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default InstanceDetails;\n","import React, { Component } from \"react\";\nimport {\n  ButtonGroup,\n  Popover,\n  Button,\n  Card,\n  Elevation,\n  Spinner,\n  Menu,\n  MenuItem,\n  MenuDivider,\n  Position,\n  Toaster,\n  Toast,\n  Alert,\n  Intent\n} from \"@blueprintjs/core\";\nimport { Redirect, Route, Link, Switch } from \"react-router-dom\";\nimport LaunchInstance from \"./LaunchInstance/LaunchInstance\";\nimport axios from \"axios\";\nimport InstanceDetails from \"./InstanceDetails\";\nimport { checkRole } from \"../Authenticate/CheckRole\";\n\nconst divStyle = {\n  overflowY: \"scroll\",\n  height: \"500px\",\n  position: \"relative\"\n};\n\nexport class InstanceBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: false,\n      openLaunchDrawer: false,\n      vm_list: [],\n      showToast: false,\n      toastData: \"Request unsuccessfull\",\n      showDeleteAlert: false,\n      vm_delete_id: \"\",\n      showLaunchButton: false,\n      perm_data: []\n    };\n    this.launchInstanceDrawer = this.launchInstanceDrawer.bind(this);\n    this.closeInstanceDrawer = this.closeInstanceDrawer.bind(this);\n    this.authenticateToken = this.authenticateToken.bind(this);\n    this.getVMList = this.getVMList.bind(this);\n    this.openConsole = this.openConsole.bind(this);\n    this.stopVM = this.stopVM.bind(this);\n    this.toastGone = this.toastGone.bind(this);\n    this.startVM = this.startVM.bind(this);\n    this.rebootVM = this.rebootVM.bind(this);\n    this.deleteVM = this.deleteVM.bind(this);\n    this.handleDeleteCancel = this.handleDeleteCancel.bind(this);\n    this.handleDeleteConfirm = this.handleDeleteConfirm.bind(this);\n    this.handleDeleteOpen = this.handleDeleteOpen.bind(this);\n  }\n\n  toastGone() {\n    console.log(\"tast is gone\");\n    this.setState({ showToast: false });\n  }\n\n  launchInstanceDrawer() {\n    this.setState({ openLaunchDrawer: true });\n  }\n\n  closeInstanceDrawer() {\n    this.setState({ openLaunchDrawer: false });\n  }\n\n  componentDidMount() {\n    this.setState({ isFetching: true });\n    this.authenticateToken().then(res => {\n      console.log(\"done auth\");\n      try {\n        const permission_list = checkRole().then(perm_data => {\n          console.log(\"gotchaaaa\");\n          console.log(perm_data);\n          this.setState({ perm_data: perm_data });\n          if (perm_data.includes(\"create_vm\")) {\n            this.setState({ showLaunchButton: true });\n          } else {\n            this.setState({ showLaunchButton: false });\n          }\n        });\n        console.log(permission_list);\n      } catch {\n        console.log(\n          \"some error occurred at instancebody.js componentdidmount call\"\n        );\n      }\n\n      this.getVMList().then(resp => {\n        console.log(\"done get\");\n        this.setState({ isFetching: false });\n      });\n    });\n  }\n\n  handleDeleteOpen(value, e) {\n    this.setState({ vm_delete_id: value });\n    this.setState({ showDeleteAlert: true });\n  }\n\n  handleDeleteConfirm() {\n    this.setState({ showDeleteAlert: false });\n    this.deleteVM();\n  }\n  handleDeleteCancel() {\n    this.setState({ showDeleteAlert: false });\n  }\n\n  stopVM(value, e) {\n    console.log(\"stopping vm...\");\n    const vm_id = value;\n    const data = {\n      scopedToken: this.state.scopedToken,\n      serverID: vm_id\n    };\n    return axios\n      .post(\"/api/v1/vm-service/stop-vm\", data)\n      .then(res => {\n        this.setState({ toastData: res.data.msg });\n        console.log(res.data);\n        this.setState({ showToast: true });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  rebootVM(value, e) {\n    console.log(\"rebooting vm...\");\n    const vm_id = value;\n    const data = {\n      scopedToken: this.state.scopedToken,\n      serverID: vm_id\n    };\n    return axios\n      .post(\"/api/v1/vm-service/reboot-vm\", data)\n      .then(res => {\n        this.setState({ toastData: res.data.msg });\n        console.log(res.data);\n        this.setState({ showToast: true });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  deleteVM() {\n    console.log(\"deleting vm...\");\n    const vm_id = this.state.vm_delete_id;\n    const data = {\n      scopedToken: this.state.scopedToken,\n      serverID: vm_id\n    };\n    return axios\n      .post(\"/api/v1/vm-service/delete-vm\", data)\n      .then(res => {\n        this.setState({ toastData: \"Successfully deleted vm.\" });\n        console.log(res.data);\n        this.setState({ showToast: true });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  startVM(value, e) {\n    console.log(\"starting vm...\");\n    const vm_id = value;\n    const data = {\n      scopedToken: this.state.scopedToken,\n      serverID: vm_id\n    };\n    return axios\n      .post(\"/api/v1/vm-service/start-vm\", data)\n      .then(res => {\n        this.setState({ toastData: res.data.msg });\n        console.log(res.data);\n        this.setState({ showToast: true });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  openConsole(value, e) {\n    const vm_id = value;\n    const data = {\n      scopedToken: this.state.scopedToken,\n      serverID: vm_id\n    };\n    return axios\n      .post(\"/api/v1/vm-service/remote-console\", data)\n      .then(res => {\n        const console_link = res.data.msg.console.url;\n        console.log(console_link);\n        const win = window.open(console_link, \"_blank\");\n        win.focus();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  authenticateToken() {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    return axios\n      .get(\"/auth/authenticate\", config)\n      .then(res => {\n        this.setState({\n          projectID: res.data.data.projectID,\n          scopedToken: res.data.data.scopedToken\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  getVMList() {\n    const data = {\n      scopedToken: this.state.scopedToken\n    };\n    return axios\n      .post(\"/api/v1/vm-service/get-vm-list\", data)\n      .then(res => {\n        const vm_list = res.data;\n        this.setState({ vm_list: vm_list });\n        console.log(vm_list);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <LaunchInstance\n          drawerOpen={this.state.openLaunchDrawer}\n          closeInstanceDrawer={this.closeInstanceDrawer}\n          showLaunchButton={this.state.showLaunchButton}\n        />\n        <div\n          style={{ padding: \"1em\", paddingLeft: \"10%\", paddingRight: \"10%\" }}\n          align=\"right\"\n        >\n          <Button\n            onClick={this.launchInstanceDrawer}\n            disabled={!this.state.showLaunchButton}\n            intent=\"success\"\n            icon=\"cloud-upload\"\n          >\n            Launch Instance\n          </Button>\n          {this.state.showToast ? (\n            <Toaster position={Position.RIGHT_TOP} canEscapeKeyClear={true}>\n              <Toast\n                intent=\"primary\"\n                message={this.state.toastData}\n                timeout=\"3000\"\n                onDismiss={this.toastGone}\n              />\n            </Toaster>\n          ) : (\n            \"\"\n          )}\n\n          <Alert\n            cancelButtonText=\"Cancel\"\n            confirmButtonText=\"Delete VM\"\n            icon=\"trash\"\n            intent={Intent.DANGER}\n            isOpen={this.state.showDeleteAlert}\n            onCancel={this.handleDeleteCancel}\n            onConfirm={this.handleDeleteConfirm}\n          >\n            <p>\n              Are you sure you want to Delete the VM? You won't be able to\n              restore it later. Make sure you have a backup.\n            </p>\n          </Alert>\n          <div\n            style={{\n              paddingTop: \"1em\"\n            }}\n            align=\"left\"\n          >\n            <Card elevation={Elevation.TWO}>\n              <h2>Instances</h2>\n              <div style={divStyle}>\n                {this.state.isFetching ? (\n                  <Spinner />\n                ) : (\n                  this.state.vm_list.map(vm => {\n                    return (\n                      <>\n                        <div\n                          style={{\n                            marginBlock: 0,\n                            paddingTop: \".25em\",\n                            paddingBottom: \".25em\",\n                            paddingLeft: \".25em\",\n                            paddingRight: \".25em\"\n                          }}\n                        >\n                          {/* <Link\n                            style={{\n                              \"text-decoration\": \"none\",\n                              color: \"black\"\n                            }}\n                            to={`/dashboard/instance-details/${vm.id}`}\n                          > */}\n                          <Card interactive={true} elevation={Elevation.ONE}>\n                            <div\n                              key={vm.id}\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"space-between\"\n                              }}\n                            >\n                              <p>{vm.name}</p>\n                              <ButtonGroup>\n                                <Button\n                                  onClick={e => {\n                                    e.stopPropagation();\n                                    window.location.href = `/dashboard/instance-details/${vm.id}`;\n                                  }}\n                                  icon=\"list-detail-view\"\n                                >\n                                  Details\n                                </Button>\n                                <Button\n                                  value={vm.name}\n                                  onClick={e => {\n                                    e.stopPropagation();\n                                    this.openConsole(vm.id, e);\n                                  }}\n                                  icon=\"console\"\n                                  disabled={\n                                    this.state.perm_data.includes(\"console_vm\")\n                                      ? false\n                                      : true\n                                  }\n                                >\n                                  Console\n                                </Button>\n                                <Popover\n                                  content={\n                                    <>\n                                      {\" \"}\n                                      <Menu>\n                                        <MenuItem\n                                          onClick={e => {\n                                            this.startVM(vm.id, e);\n                                          }}\n                                          icon=\"play\"\n                                          text=\"Start VM\"\n                                          disabled={\n                                            this.state.perm_data.includes(\n                                              \"start_vm\"\n                                            )\n                                              ? false\n                                              : true\n                                          }\n                                        />\n                                        <MenuDivider />\n                                        <MenuItem\n                                          onClick={e => {\n                                            this.stopVM(vm.id, e);\n                                          }}\n                                          icon=\"stop\"\n                                          text=\"Stop VM\"\n                                          disabled={\n                                            this.state.perm_data.includes(\n                                              \"stop_vm\"\n                                            )\n                                              ? false\n                                              : true\n                                          }\n                                        />\n                                        <MenuDivider />\n                                        <MenuItem\n                                          onClick={e => {\n                                            this.rebootVM(vm.id, e);\n                                          }}\n                                          icon=\"reset\"\n                                          text=\"Reboot VM\"\n                                          disabled={\n                                            this.state.perm_data.includes(\n                                              \"reboot_vm\"\n                                            )\n                                              ? false\n                                              : true\n                                          }\n                                        />\n                                        <MenuDivider />\n                                        <MenuItem\n                                          onClick={e => {\n                                            this.handleDeleteOpen(vm.id, e);\n                                          }}\n                                          icon=\"trash\"\n                                          text=\"Delete VM\"\n                                          disabled={\n                                            this.state.perm_data.includes(\n                                              \"delete_vm\"\n                                            )\n                                              ? false\n                                              : true\n                                          }\n                                        />\n                                      </Menu>\n                                    </>\n                                  }\n                                >\n                                  <Button\n                                    onClick={e => {\n                                      // e.stopPropagation();\n                                    }}\n                                    icon=\"cog\"\n                                    rightIcon=\"caret-down\"\n                                  >\n                                    Actions\n                                  </Button>\n                                </Popover>\n                              </ButtonGroup>\n                            </div>\n                          </Card>\n                          {/* </Link> */}\n                        </div>\n                        <Switch>\n                          <Route path=\"/dashboard/instance-details\">\n                            {\" \"}\n                            <InstanceDetails />\n                          </Route>\n                        </Switch>\n                      </>\n                    );\n                  })\n                )}\n              </div>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InstanceBody;\n","import jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\n\nexport function checkRole() {\n  try {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const role_name = jwt_decode(jwt_token).roles;\n    console.log(role_name);\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    return axios\n      .get(\"/auth/getsubuserpermissionlist\", config)\n      .then(res => {\n        console.log(res.data.data);\n        return res.data.data;\n      })\n      .catch(err => {\n        console.log(err);\n        return [];\n      });\n  } catch (err) {\n    console.log(\"Token not found\");\n    return [];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Navbarss } from \"../Navbar/Navbar\";\nimport { jwtAuth } from \"../Authenticate/AuthJwt\";\nimport { NavDrawer } from \"../NavDrawer/NavDrawer\";\nimport { InstanceBody } from \"./InstanceBody\";\n\nexport class Instances extends Component {\n  constructor(props) {\n    super(props);\n    this.showDrawer = this.showDrawer.bind(this);\n    this.hideDrawer = this.hideDrawer.bind(this);\n    this.sessionDelete = this.sessionDelete.bind(this);\n    this.state = { showDrawerEvent: false, jwtValidity: true };\n  }\n  sessionDelete() {\n    this.setState({ jwtValidity: false });\n  }\n  showDrawer(e) {\n    this.setState({ showDrawerEvent: true });\n  }\n  hideDrawer(e) {\n    this.setState({ showDrawerEvent: false });\n  }\n  render() {\n    const sessionValidity = jwtAuth();\n    if (!sessionValidity) {\n      this.sessionDelete();\n    }\n    return (\n      <>\n        {this.state.jwtValidity ? (\n          <>\n            {this.state.showDrawerEvent ? (\n              <NavDrawer handleHideDrawer={this.hideDrawer} />\n            ) : (\n              \"\"\n            )}\n            <div>\n              <Navbarss dashboardView={true} showDrawer={this.showDrawer} />\n              <InstanceBody />\n            </div>\n          </>\n        ) : (\n          <Redirect to={\"/signin\"} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default Instances;\n","import React, { Component } from \"react\";\nimport { Drawer, Classes, Position, Spinner } from \"@blueprintjs/core\";\nimport { Formik } from \"formik\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport jwt_decode from \"jwt-decode\";\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: #777;\n  font-family: \"Raleway\", sans-serif;\n  font-size: 1em;\n  margin: 0.5em 0;\n  position: relative;\n`;\n\nconst Form = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n`;\n\nconst Input = styled.input`\n  width: 300px;\n  height: 35px;\n  border: 1px solid #ccc;\n  background-color: #fff;\n`;\n\nconst SelectDiv = styled.div`\n  position: relative;\n  font-family: Arial;\n  background-color: DodgerBlue;\n`;\n\nconst CenterDiv = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  paddingtop: 50%;\n`;\n\nconst Button = styled.button`\n  width: 300px;\n  height: 35px;\n  background-color: #5995ef;\n  color: #fff;\n  border-radius: 3px;\n`;\n\nexport class AddUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: false,\n      projectID: \"\",\n      scopedToken: \"\",\n      roles_list: [],\n      rolename: \"\"\n    };\n    this.authenticateToken = this.authenticateToken.bind(this);\n    this.formSubmit = this.formSubmit.bind(this);\n    this.getRoles = this.getRoles.bind(this);\n    this.setUser = this.setUser.bind(this);\n  }\n  authenticateToken() {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    return axios\n      .get(\"/auth/authenticate\", config)\n      .then(res => {\n        this.setState({\n          projectID: res.data.data.projectID,\n          scopedToken: res.data.data.scopedToken\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  getRoles(rolename, permissionlist) {\n    const roles_list = [];\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    const data = {\n      projectID: this.state.projectID\n    };\n    return axios\n      .post(\"/auth/getrole\", data, config)\n      .then(res => {\n        const role_list = res.data.data;\n        role_list.map(role => {\n          roles_list.push({\n            label: role.split(\"_\")[0],\n            value: role.split(\"_\")[0]\n          });\n        });\n        this.setState({ roles_list: roles_list });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  setUser(role_name, email, password) {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const parent_id = jwt_decode(jwt_token).sub;\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    const data = {\n      projectID: this.state.projectID,\n      role_name: role_name,\n      email: email,\n      password: password,\n      parent_id: parent_id\n    };\n    return axios\n      .post(\"/auth/setuser\", data, config)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  componentDidMount() {\n    this.setState({ isFetching: true });\n    this.authenticateToken().then(res => {\n      this.getRoles().then(resp => {\n        console.log(\"got it\");\n        console.log(this.state.roles_list);\n        this.setState({ isFetching: false });\n      });\n    });\n  }\n\n  formSubmit(values) {\n    this.setState({ isFetching: true });\n    console.log(values.email);\n    console.log(this.state.rolename);\n    this.setUser(this.state.rolename, values.email, values.password).then(\n      resp => {\n        console.log(\"done\");\n        this.setState({ isFetching: false });\n      }\n    );\n  }\n\n  changeSelect = value => {\n    this.setState({ rolename: value.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Drawer\n          size={Drawer.SIZE_SMALL}\n          icon=\"new-person\"\n          onClose={this.props.closeInstanceDrawer}\n          title=\"Add User\"\n          isOpen={this.props.drawerOpen}\n          position={Position.RIGHT}\n        >\n          <div className={Classes.DRAWER_BODY}>\n            <div className={Classes.DIALOG_BODY}>\n              {this.state.isFetching ? (\n                <CenterDiv>\n                  <Spinner />\n                </CenterDiv>\n              ) : (\n                <Formik\n                  initialValues={{\n                    email: \"\",\n                    password: \"\"\n                  }}\n                  onSubmit={values => {\n                    this.formSubmit(values);\n                  }}\n                  render={({\n                    values,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit\n                  }) => (\n                    <Form onSubmit={handleSubmit}>\n                      <Label>\n                        Email\n                        <Input\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.email}\n                          type=\"email\"\n                          name=\"email\"\n                          placeholder=\"Enter Email\"\n                        />\n                      </Label>\n                      <Label>\n                        Password\n                        <Input\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.password}\n                          type=\"text\"\n                          name=\"password\"\n                          placeholder=\"Enter Password\"\n                        />\n                      </Label>\n                      <Label>\n                        Select Role\n                        <SelectDiv>\n                          <Select\n                            name=\"colors\"\n                            placeholder=\"Select Role\"\n                            options={this.state.roles_list}\n                            className=\"basic-multi-select\"\n                            classNamePrefix=\"select\"\n                            onChange={this.changeSelect}\n                            closeMenuOnSelect={true}\n                          />\n                        </SelectDiv>\n                      </Label>\n\n                      <Button type=\"submit\">Add User</Button>\n                    </Form>\n                  )}\n                />\n              )}\n            </div>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default AddUser;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { ButtonGroup, Button, Card, Elevation } from \"@blueprintjs/core\";\nimport { AddUser } from \"./AddUser/AddUser\";\nimport axios from \"axios\";\nimport { Navbarss } from \"../Navbar/Navbar\";\nimport { jwtAuth } from \"../Authenticate/AuthJwt\";\nimport { NavDrawer } from \"../NavDrawer/NavDrawer\";\n\nconst divStyle = {\n  overflowY: \"scroll\",\n  height: \"500px\",\n  position: \"relative\"\n};\n\nexport class Users extends Component {\n  constructor(props) {\n    super(props);\n    this.showDrawer = this.showDrawer.bind(this);\n    this.hideDrawer = this.hideDrawer.bind(this);\n    this.sessionDelete = this.sessionDelete.bind(this);\n    this.state = {\n      showDrawerEvent: false,\n      jwtValidity: true,\n      openLaunchDrawer: false,\n      projectID: \"\",\n      scopedToken: \"\",\n      users_list: []\n    };\n    this.launchInstanceDrawer = this.launchInstanceDrawer.bind(this);\n    this.closeInstanceDrawer = this.closeInstanceDrawer.bind(this);\n    this.authenticateToken = this.authenticateToken.bind(this);\n    this.getUsers = this.getUsers.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ isFetching: true });\n    this.authenticateToken().then(res => {\n      this.getUsers().then(resp => {\n        console.log(\"got it\");\n        this.setState({ isFetching: false });\n      });\n    });\n  }\n\n  authenticateToken() {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    return axios\n      .get(\"/auth/authenticate\", config)\n      .then(res => {\n        this.setState({\n          projectID: res.data.data.projectID,\n          scopedToken: res.data.data.scopedToken\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  getUsers(rolename, permissionlist) {\n    const users_list = [];\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    const data = {\n      projectID: this.state.projectID\n    };\n    return axios\n      .post(\"/auth/getuser\", data, config)\n      .then(res => {\n        const user_list = res.data.data;\n        user_list.map(role => {\n          users_list.push(role.split(\"_\")[0]);\n        });\n        this.setState({ users_list: users_list });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  deleteUser(value, e) {\n    e.preventDefault();\n    console.log(value);\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    const data = {\n      projectID: this.state.projectID,\n      user_email: value\n    };\n    return axios\n      .post(\"/auth/deleteuser\", data, config)\n      .then(res => {\n        console.log(res);\n        window.location.reload();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  sessionDelete() {\n    this.setState({ jwtValidity: false });\n  }\n\n  showDrawer(e) {\n    this.setState({ showDrawerEvent: true });\n  }\n\n  hideDrawer(e) {\n    this.setState({ showDrawerEvent: false });\n  }\n\n  launchInstanceDrawer() {\n    this.setState({ openLaunchDrawer: true });\n  }\n\n  closeInstanceDrawer() {\n    this.setState({ openLaunchDrawer: false });\n    window.location.reload();\n  }\n  render() {\n    const sessionValidity = jwtAuth();\n    if (!sessionValidity) {\n      this.sessionDelete();\n    }\n    return (\n      <>\n        {this.state.jwtValidity ? (\n          <>\n            {this.state.showDrawerEvent ? (\n              <NavDrawer handleHideDrawer={this.hideDrawer} />\n            ) : (\n              \"\"\n            )}\n            <div>\n              <Navbarss dashboardView={true} showDrawer={this.showDrawer} />\n              <div>\n                <AddUser\n                  drawerOpen={this.state.openLaunchDrawer}\n                  closeInstanceDrawer={this.closeInstanceDrawer}\n                />\n                <div\n                  style={{\n                    padding: \"1em\",\n                    paddingLeft: \"10%\",\n                    paddingRight: \"10%\"\n                  }}\n                  align=\"right\"\n                >\n                  <Button\n                    onClick={this.launchInstanceDrawer}\n                    intent=\"success\"\n                    icon=\"new-person\"\n                  >\n                    Add User\n                  </Button>\n\n                  <div\n                    style={{\n                      paddingTop: \"1em\"\n                    }}\n                    align=\"left\"\n                  >\n                    <Card elevation={Elevation.TWO}>\n                      <h2>Users</h2>\n                      <div style={divStyle}>\n                        {this.state.users_list.map(user => {\n                          return (\n                            <div\n                              key={user}\n                              style={{\n                                marginBlock: 0,\n                                paddingTop: \".25em\",\n                                paddingBottom: \".25em\",\n                                paddingLeft: \".25em\",\n                                paddingRight: \".25em\"\n                              }}\n                            >\n                              <Card\n                                interactive={true}\n                                elevation={Elevation.ONE}\n                              >\n                                <div\n                                  style={{\n                                    display: \"flex\",\n                                    justifyContent: \"space-between\"\n                                  }}\n                                >\n                                  <strong>\n                                    <p>{user}</p>\n                                  </strong>\n                                  <Button\n                                    value={user}\n                                    id={user}\n                                    onClick={e => this.deleteUser(user, e)}\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                  >\n                                    Delete User\n                                  </Button>\n                                </div>\n                              </Card>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </Card>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          <Redirect to={\"/signin\"} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default Users;\n","import React, { Component } from \"react\";\nimport { Drawer, Classes, Position, Spinner } from \"@blueprintjs/core\";\nimport { Formik } from \"formik\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: #777;\n  font-family: \"Raleway\", sans-serif;\n  font-size: 1em;\n  margin: 0.5em 0;\n  position: relative;\n`;\n\nconst Form = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n`;\n\nconst Input = styled.input`\n  width: 300px;\n  height: 35px;\n  border: 1px solid #ccc;\n  background-color: #fff;\n`;\n\nconst SelectDiv = styled.div`\n  position: relative;\n  font-family: Arial;\n  background-color: DodgerBlue;\n`;\n\nconst CenterDiv = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  paddingtop: 50%;\n`;\n\nconst Button = styled.button`\n  width: 300px;\n  height: 35px;\n  background-color: #5995ef;\n  color: #fff;\n  border-radius: 3px;\n`;\n\nexport class AddRole extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: false,\n      rolename: \"\",\n      projectID: \"\",\n      scopedToken: \"\",\n      permissionnames: [],\n      permissionlist: []\n    };\n    this.authenticateToken = this.authenticateToken.bind(this);\n    this.formSubmit = this.formSubmit.bind(this);\n    this.addRole = this.addRole.bind(this);\n  }\n  authenticateToken() {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    return axios\n      .get(\"/auth/authenticate\", config)\n      .then(res => {\n        this.setState({\n          projectID: res.data.data.projectID,\n          scopedToken: res.data.data.scopedToken\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  componentDidMount() {\n    this.setState({ isFetching: true });\n    this.authenticateToken().then(res => {\n      this.getPermissionList().then(res => {\n        console.log(this.state);\n        this.setState({ isFetching: false });\n      });\n    });\n  }\n\n  formSubmit(values) {\n    this.setState({ isFetching: true });\n    console.log(values.rolename);\n    console.log(this.state.permissionnames);\n    this.addRole(values.rolename, this.state.permissionnames).then(res => {\n      console.log(\"done\");\n      this.setState({ isFetching: false });\n    });\n  }\n\n  addRole(rolename, permissionlist) {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    const perm_list = [];\n    permissionlist.map(perm => {\n      perm_list.push(perm.value);\n    });\n    console.log(perm_list);\n    console.log(rolename);\n    const data = {\n      role_name: rolename,\n      projectID: this.state.projectID,\n      permissions_list: perm_list\n    };\n    return axios\n      .post(\"/auth/setrole\", data, config)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  getPermissionList = () => {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    const perms = [];\n    return axios\n      .get(\"/auth/getpermissionlist\", config)\n      .then(res => {\n        const data = res.data.data;\n        data.map(perm => {\n          perms.push({ value: perm.id, label: perm.value });\n        });\n        this.setState({ permissionlist: perms });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  changeSelect = values => {\n    this.setState({ permissionnames: values });\n  };\n\n  render() {\n    return (\n      <div>\n        <Drawer\n          size={Drawer.SIZE_SMALL}\n          icon=\"crown\"\n          onClose={this.props.closeInstanceDrawer}\n          title=\"Add Role\"\n          isOpen={this.props.drawerOpen}\n          position={Position.RIGHT}\n        >\n          <div className={Classes.DRAWER_BODY}>\n            <div className={Classes.DIALOG_BODY}>\n              {this.state.isFetching ? (\n                <CenterDiv>\n                  <Spinner />\n                </CenterDiv>\n              ) : (\n                <Formik\n                  initialValues={{\n                    rolename: \"\",\n                    rolepermissions: \"\"\n                  }}\n                  onSubmit={values => {\n                    this.formSubmit(values);\n                  }}\n                  render={({\n                    values,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    setFieldValue,\n                    setFieldTouched\n                  }) => (\n                    <>\n                      <Form onSubmit={handleSubmit}>\n                        <Label>\n                          Role Name\n                          <Input\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.rolename}\n                            type=\"text\"\n                            name=\"rolename\"\n                            placeholder=\"Enter Role Name\"\n                          />\n                        </Label>\n                        <Label>\n                          Select Role Permissions\n                          <SelectDiv>\n                            <Select\n                              isMulti\n                              name=\"colors\"\n                              placeholder=\"Select Permissions\"\n                              options={this.state.permissionlist}\n                              className=\"basic-multi-select\"\n                              classNamePrefix=\"select\"\n                              onChange={this.changeSelect}\n                              closeMenuOnSelect={false}\n                            />\n                          </SelectDiv>\n                        </Label>\n\n                        <Button type=\"submit\">Add Role</Button>\n                      </Form>\n                    </>\n                  )}\n                />\n              )}\n            </div>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default AddRole;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { ButtonGroup, Button, Card, Elevation } from \"@blueprintjs/core\";\nimport axios from \"axios\";\n\nimport { Navbarss } from \"../Navbar/Navbar\";\nimport { jwtAuth } from \"../Authenticate/AuthJwt\";\nimport { NavDrawer } from \"../NavDrawer/NavDrawer\";\nimport { AddRole } from \"./AddRole/AddRole\";\n\nconst divStyle = {\n  overflowY: \"scroll\",\n  height: \"500px\",\n  position: \"relative\"\n};\n\nexport class Roles extends Component {\n  constructor(props) {\n    super(props);\n    this.showDrawer = this.showDrawer.bind(this);\n    this.hideDrawer = this.hideDrawer.bind(this);\n    this.sessionDelete = this.sessionDelete.bind(this);\n    this.state = {\n      showDrawerEvent: false,\n      jwtValidity: true,\n      openLaunchDrawer: false,\n      roles_list: [],\n      isFetching: false\n    };\n    this.launchInstanceDrawer = this.launchInstanceDrawer.bind(this);\n    this.closeInstanceDrawer = this.closeInstanceDrawer.bind(this);\n    this.getRoles = this.getRoles.bind(this);\n    this.authenticateToken = this.authenticateToken.bind(this);\n    this.deleteRole = this.deleteRole.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ isFetching: true });\n    this.authenticateToken().then(res => {\n      this.getRoles().then(resp => {\n        console.log(\"got it\");\n        this.setState({ isFetching: false });\n      });\n    });\n  }\n\n  deleteRole(value, e) {\n    e.preventDefault();\n    console.log(value);\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    const data = {\n      projectID: this.state.projectID,\n      role_name: value\n    };\n    return axios\n      .post(\"/auth/deleterole\", data, config)\n      .then(res => {\n        console.log(res);\n        window.location.reload();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  authenticateToken() {\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    return axios\n      .get(\"/auth/authenticate\", config)\n      .then(res => {\n        this.setState({\n          projectID: res.data.data.projectID,\n          scopedToken: res.data.data.scopedToken\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  getRoles(rolename, permissionlist) {\n    const roles_list = [];\n    const jwt_token = localStorage.getItem(\"auth_token\");\n    const config = {\n      headers: { Authorization: \"Bearer \" + jwt_token },\n      \"Content-Type\": \"application/json\"\n    };\n    const data = {\n      projectID: this.state.projectID\n    };\n    return axios\n      .post(\"/auth/getrole\", data, config)\n      .then(res => {\n        const role_list = res.data.data;\n        role_list.map(role => {\n          roles_list.push(role.split(\"_\")[0]);\n        });\n        this.setState({ roles_list: roles_list });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  sessionDelete() {\n    this.setState({ jwtValidity: false });\n  }\n  showDrawer(e) {\n    this.setState({ showDrawerEvent: true });\n  }\n  hideDrawer(e) {\n    this.setState({ showDrawerEvent: false });\n  }\n\n  launchInstanceDrawer() {\n    this.setState({ openLaunchDrawer: true });\n  }\n\n  closeInstanceDrawer() {\n    this.setState({ openLaunchDrawer: false });\n    window.location.reload();\n  }\n\n  render() {\n    const sessionValidity = jwtAuth();\n    if (!sessionValidity) {\n      this.sessionDelete();\n    }\n\n    return (\n      <>\n        {this.state.jwtValidity ? (\n          <>\n            {this.state.showDrawerEvent ? (\n              <NavDrawer handleHideDrawer={this.hideDrawer} />\n            ) : (\n              \"\"\n            )}\n            <div>\n              <Navbarss dashboardView={true} showDrawer={this.showDrawer} />\n              <div>\n                <AddRole\n                  drawerOpen={this.state.openLaunchDrawer}\n                  closeInstanceDrawer={this.closeInstanceDrawer}\n                />\n                <div\n                  style={{\n                    padding: \"1em\",\n                    paddingLeft: \"10%\",\n                    paddingRight: \"10%\"\n                  }}\n                  align=\"right\"\n                >\n                  <Button\n                    onClick={this.launchInstanceDrawer}\n                    intent=\"success\"\n                    icon=\"crown\"\n                  >\n                    Add Role\n                  </Button>\n                  <div style={{ paddingTop: \"1em\" }} align=\"left\">\n                    <Card elevation={Elevation.TWO}>\n                      <h2>Roles</h2>\n                      <div style={divStyle}>\n                        {this.state.roles_list.map(role => {\n                          return (\n                            <div\n                              key={role}\n                              style={{\n                                marginBlock: 0,\n                                paddingTop: \".25em\",\n                                paddingBottom: \".25em\",\n                                paddingLeft: \".25em\",\n                                paddingRight: \".25em\"\n                              }}\n                            >\n                              <Card\n                                interactive={true}\n                                elevation={Elevation.ONE}\n                              >\n                                <div\n                                  style={{\n                                    display: \"flex\",\n                                    justifyContent: \"space-between\"\n                                  }}\n                                >\n                                  <strong>\n                                    <p>{role}</p>\n                                  </strong>\n                                  <Button\n                                    value={role}\n                                    id={role}\n                                    onClick={e => this.deleteRole(role, e)}\n                                    intent=\"danger\"\n                                    icon=\"trash\"\n                                  >\n                                    Delete Role\n                                  </Button>\n                                </div>\n                              </Card>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </Card>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          <Redirect to={\"/signin\"} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default Roles;\n","import \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"normalize.css/normalize.css\";\nimport React from \"react\";\n\nimport { Homepage } from \"./Homepage/Homepage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Dashboard } from \"./DashboardView/Dashboard\";\nimport { Login } from \"./LoginView/Login\";\nimport { Signup } from \"./LoginView/Signup\";\nimport { Instances } from \"./Instances/Instances\";\nimport { Users } from \"./IdentityView/Users\";\nimport { Roles } from \"./IdentityView/Roles\";\nimport InstanceDetails from \"./Instances/InstanceDetails\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <React.Fragment>\n            <Route exact path=\"/\" component={Homepage} />\n            <Route path=\"/signin\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/dashboard/overview\" component={Dashboard} />\n            <Route path=\"/dashboard/instances\" component={Instances} />\n            <Route path=\"/dashboard/identity/users\" component={Users} />\n            <Route path=\"/dashboard/identity/roles\" component={Roles} />\n            <Route\n              path=\"/dashboard/instance-details/:instanceid\"\n              component={InstanceDetails}\n            />\n          </React.Fragment>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}